{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Documentation Guide","text":"<p>This folder contains the documentation for the project, built using MkDocs. <code>mkdocs</code> and all the required dependencies for building the docs are installed when you install this project with dev dependencies.</p> <p>Warning</p> <p>To make this work in your repo you will need to update your repo settings under <code>Settings/Pages/</code> so that docs are deployed from the<code>gh-pages</code> branch.</p>"},{"location":"#writing-documentation","title":"Writing Documentation","text":"<ul> <li>Documentation is written in Markdown (<code>.md</code>) files.</li> <li>The main configuration file is <code>mkdocs.yml</code>, where you can define site settings, navigation structure, themes, and extensions.</li> <li>Place new documentation pages inside this <code>docs/</code> folder and link them in <code>mkdocs.yml</code>.</li> </ul>"},{"location":"#building-and-serving-the-docs-locally","title":"Building and Serving the Docs Locally","text":"<p>To preview the documentation locally, run:</p> <pre><code>poetry run mkdocs serve\n</code></pre> <p>or</p> <pre><code>make serve\n</code></pre> <p>from the main project directory (one above <code>docs/</code>).</p> <p>This starts a local web server, typically at <code>http://127.0.0.1:8000/</code>, where you can view the documentation live.</p>"},{"location":"#deploying-the-docs","title":"Deploying the Docs","text":"<p>MkDocs is set up to deploy to GitHub Pages via a GitHub Action. On each push to <code>main</code>, the documentation will be built and published to the <code>gh-pages</code> branch.</p> <p>To manually deploy, run:</p> <pre><code>poetry run mkdocs gh-deploy --force\n</code></pre> <p>or</p> <pre><code>make deploy\n</code></pre> <p>This will build and push the site to GitHub Pages.</p>"},{"location":"#adding-code-documentation","title":"Adding Code Documentation","text":"<p>This project uses <code>mkdocstrings</code> to generate API documentation directly from the source code. To document Python functions and classes:</p> <ul> <li>Ensure docstrings follow a consistent format (NumPy-style is recommended).</li> <li>Use <code>packagename.module</code> syntax inside Markdown to auto-generate API docs.</li> </ul> <p>For more details, see the MkDocs documentation and the MkDocStrings plugin.</p>"},{"location":"#documenting-functions","title":"Documenting functions","text":"<p>You should add docstrings to your functions, and I recommend you use the <code>numpydoc</code> style for docstrings. You should fill out the sections as needed. In addition, I recommend you include type hints to help users understand your functions. This is the example function that is given in the package example module.</p> <pre><code>def example_function(\n    x: Union[int, float, npt.NDArray],\n) -&gt; Union[int, float, npt.NDArray]:\n    \"\"\"Squares the input value.\n\n    This function computes the square of a given number or NumPy array.\n\n    Parameters\n    ----------\n    x : int, float, or npt.NDArray\n        The input value(s) to be squared.\n\n    Returns\n    -------\n    result : int, float, or npt.NDArray\n        The squared result of `x`.\n\n    Raises\n    ------\n    TypeError\n        If `x` is not an int, float, or NumPy array.\n\n    Notes\n    -----\n    This function uses `np.square(x)`, which is optimized for NumPy arrays.\n\n    Examples\n    --------\n    Square an integer:\n    &gt;&gt;&gt; example_function(3)\n    9\n\n    Square a float:\n    &gt;&gt;&gt; example_function(2.5)\n    6.25\n\n    Square a NumPy array:\n    &gt;&gt;&gt; import numpy as np\n    &gt;&gt;&gt; arr = np.array([1, 2, 3])\n    &gt;&gt;&gt; example_function(arr)\n    array([1, 4, 9])\n\n    See Also\n    --------\n    numpy.square : Equivalent NumPy function for squaring elements.\n\n    References\n    ----------\n    .. [1] NumPy Documentation: https://numpy.org/doc/stable/reference/generated/numpy.square.html\n    \"\"\"\n    if not isinstance(x, (int, float, np.ndarray)):\n        raise TypeError(\"Input must be an int, float, or NumPy array.\")\n\n    return np.square(x)\n</code></pre>"},{"location":"apidocs/","title":"API Documentation","text":"<p>This contains automatically generated API documentation for the example function in this repository. You can add more information to this markdown file as needed.</p> <p>Squares the input value.</p> <p>This function computes the square of a given number or NumPy array.</p>"},{"location":"apidocs/#packagename.module.example_function--parameters","title":"Parameters","text":"<p>x : int, float, or npt.NDArray     The input value(s) to be squared.</p>"},{"location":"apidocs/#packagename.module.example_function--returns","title":"Returns","text":"<p>result : int, float, or npt.NDArray     The squared result of <code>x</code>.</p>"},{"location":"apidocs/#packagename.module.example_function--raises","title":"Raises","text":"<p>TypeError     If <code>x</code> is not an int, float, or NumPy array.</p>"},{"location":"apidocs/#packagename.module.example_function--notes","title":"Notes","text":"<p>This function uses <code>np.square(x)</code>, which is optimized for NumPy arrays.</p>"},{"location":"apidocs/#packagename.module.example_function--examples","title":"Examples","text":"<p>Square an integer:</p> <p>example_function(3) 9</p> <p>Square a float:</p> <p>example_function(2.5) 6.25</p> <p>Square a NumPy array:</p> <p>import numpy as np arr = np.array([1, 2, 3]) example_function(arr) array([1, 4, 9])</p>"},{"location":"apidocs/#packagename.module.example_function--see-also","title":"See Also","text":"<p>numpy.square : Equivalent NumPy function for squaring elements.</p>"},{"location":"apidocs/#packagename.module.example_function--references","title":"References","text":"<p>.. [1] NumPy Documentation: https://numpy.org/doc/stable/reference/generated/numpy.square.html</p>"},{"location":"notebook-example/","title":"Notebook Example","text":"<p>You can create notebooks to show how to use your package. These will be automatically compiled and run by <code>mkdocs</code>, depending on the settings in your <code>mkdocs.yml</code> file.</p> In\u00a0[3]: Copied! <pre>from packagename.module import example_function\n</pre> from packagename.module import example_function In\u00a0[2]: Copied! <pre>example_function(1)\n</pre> example_function(1) Out[2]: <pre>np.int64(1)</pre>"},{"location":"notebook-example/#notebook-example","title":"Notebook Example\u00b6","text":""}]}